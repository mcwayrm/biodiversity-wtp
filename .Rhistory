# PROJECT: RUM Model
# PURPOSE: Select Choice Set for each user
### SET-UP
# Directories
rm(list=ls())
setwd('/Users/rmadhok/Dropbox/biodiversity-wtp/')
# Load Packages
source('./scripts/R/functions/choice_set_travel.R')
packages <- c('sf', 'tidyverse', 'data.table')
pacman::p_load(packages, character.only = TRUE, install = FALSE)
# Settings
module <- 'cluster'    # set as 'cluster' or 'all'
samp <- 1              # random sample of users (scale 0-1)
radius <- 50          # buffer radius around home (100, 50, or 20)
clust_size <- 10       # recreation area size (10km or 5km)
# ----------------------------------------------------
# CONSTRUCT COUTERFACTUAL CHOICE SET
# ----------------------------------------------------
# Read observed trips
trips <- readRDS('./data/rds/ebird_trip_hotspots.rds')
trips <- filter(trips, geo_dist <= radius) # subset trips w/n radius
# Random sample of users
set.seed(12345)
users <- sample_frac(distinct(trips, user_id), samp)
# Trips by subset of users
sample <- inner_join(trips, users, by='user_id')
# Read hotspots
cols <- c('loc_id', 'country', 'state', 'county', 'lat', 'lon', 'name', 'time', 'v9')
hotspots <- readRDS('./data/rds/hotspots.rds')
colnames(hotspots) <- cols
hotspots <- hotspots[, c('lat', 'lon', 'name')]
# Construct Choice Sets
if(module == 'cluster'){
# Construct on the fly
cset <- choice_set(hotspots,
module = module,
radius = radius,
clust_size = clust_size)
# Read
#cset <- readRDS(paste(path, 'choice_sets/choice_set_', radius, 'km_clust_', clust_size,'km.rds', sep=''))
cset <- inner_join(cset, users, by='user_id') # choice sets of random user sample
# Cluster of observed trip
sample$hsid <- st_join(st_as_sf(sample,
coords=c('lon', 'lat'),
crs=4326),
st_as_sf(cset,
coords=c('lon', 'lat'),
crs=4326),
join = st_nearest_feature)$hsid
} else{
# Construct on the fly
cset <- choice_set(hotspots,
module = module,
radius = radius)
# Read
#cset <- readRDS(paste(path, 'choice_sets/choice_set_', radius, 'km.rds', sep=''))
cset <- inner_join(cset, users, by='user_id') %>% rename(locality = name)
}
